QUICK STARTING INFORMATION

     This is a litte document that describes first steps with the Dos9 command 
     prompt. This is an EXPERIMENTAL WORK (as it is a beta) so it might be 
     possible that some aspect described here, or in the documentation might 
     be buggy, or would'nt simply work.

     If you encounter such bugs or issues, feel free to send an email to 
     <darkbatcher@dos9.org> with a description of the bug, or even a fix if 
     you want to contribute.

     To get information about the license, see the _license file_.

LEGAL NOTICE

        Dos9 - Command prompt and interpreter for windows batch files
        Copyright (c) 2010-2014 DarkBatcher (Romain Garbi) 
        
        This program is free software: you can redistribute it and/or modify
        it under the terms of the GNU General Public License as published by
        the Free Software Foundation, either version 3 of the License, or
        (at your option) any later version.
        
        This program is distributed in the hope that it will be useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        GNU General Public License for more details.
        
        You should have received a copy of the GNU General Public License
        along with this program.  If not, see <http://www.gnu.org/licenses/>.

     Note : This project include binaries from other project, especially GNU 
     projects. These project are distributed under the terms of the GNU GPL 
     license (ie. the preceeding licence). It also includes the ansicon 
     command for windows distributions, the ansicon binaries are licensed 
     under the NEW BSD LICENSE, which can be found in LICENCE-ANSICON.TXT. The 
     sources of ansicon are availiable from 
     _http://adoxa.hostmyway.net/ansicon/_

BUILDING DOS9

     To get DOS9 binaries, you have two options :

        - Download precompiled binaries package from DOS9's sourceforge page. 
          Then you just have to unpack the package on your computer. This 
          method is only availiable for WINDOWS, and this is the recommended 
          path for these. Indeed, for *NIX systems, it's about going mad to 
          make distribution-portable binaries, for *NIX users, the second 
          solution must be used.

        - Download sources and then build them yourself. To eases this work, 
          just download sources package from DOS9's sourceforge page, or just 
          get them from the git repository using :

             git clone ssh://git.code.sf.net/p/dos9/code dos9-code

          If you get the source from the repos by the given command-line, note 
          that you will not be able to push patches and update without 
          modifying your git configuration, thus if you have already a 
          sourceforge account, it might be easier for you to download it from 
          your account.

          When you have downloaded sources, you just need to compile them 
          using any C compiler. For WINDOWS system, it is more complicated 
          than getting precompiled binaries because you need to have gcc and 
          gmake installed on your system. On WINDOWS, you should also have a 
          *NIX compatible shell. If not, you can get one from the MINGW 
          project. For *NIX system, doing so is as simple as typing :

             ./configure
             make

          WINDOWS might have to copy dependencies in the DOS9 folder if they 
          need to make to make it portable.

          An install target is not provided yet because we think that is not 
          an important task (copying on usr/bin), and because no tests have be 
          performed to check if such installation work. Finally, installing 
          the program should just putting a symbolic link on the /BIN or 
          /USR/BIN directory.

          DOS9 only depends on LIBICONV and LIBINTL, thus, any mingw 
          environment enables to build it.

          Note that getting X64 binaries working on MS-WINDOWS is somewhat 
          really annoying since official MINGW only provide X32 compiler, 
          preventing you from compiling X64. Having X64 binaries compiled by 
          MINGW needs a special setup, that makes it so though. 

FIRST STEPS

     Once you have binaries, you can run DOS9 since it has no need to be 
     installed in order to work. If you want to associate it with .BAT or 
     .CMD files though, do not associate it with both file types, as DOS9 is 
     still an unstable software.

     To run DOS9 you must execute the file DOS9.EXE located in the ``bin'' 
     directory of the folder where you built files or where you extracted the 
     archive you get from the site.

     Once you launched DOS9, you can type batch commands lines. The command 
     prompt is very similar to CMD.EXE, so that you should not be dissapointed 
     (for those who already use CMD.EXE, obviously). Commands are very similar 
     to CMD.EXE's with a few exceptions, which most important is the 
     obligation to put blank characters between switches.

GETTING HELP

     DOS9 provides a manual page manager and a text processor, that allows to 
     make simple manual page. When you first use DOS9, a good thing would be 
     to initialize it. This operation is language dependant, so you can't 
     avoid some manual setup. The help program is named HLP, the setup needed 
     is on steps :

        - STEP 1 : You need to check the languages already installed with your 
          version of DOS9, by the following line.

             hlp /l local

          If your language is already installed, just jump to step 4

        - STEP 2 : Check the languages availiables from the repository. This 
          allow you to know all the languages avaliable with DOS9.

             hlp /l remote

          If your language is not displayed, then, there is no language manual 
          tree, you should use another language.

        - STEP 3 : Get your language from the repository. Replace 
          LANG_COUNTRY in the following line by your language and your 
          country.

             hlp /d lang_COUNTRY

        - STEP 4 : Build the manual pages from the repositories. Replace 
          LANG_COUNTRY in the following line by your language and your 
          country. You may add an optional encoding ENC to specify that you 
          need to have the manual pages in ENC, rather than UTF-8. Note that 
          it will not apply to HTML documents.

             hlp /b lang_COUNTRY ENC

     Once you've done that few things, you can access the help for a command 
     or for syntax at any moment, just by typing:

        hlp command

CHANGING THE LANGUAGE

     If the language of the interpretor or of the documentation is in your 
     langage under MS-WINDOWS, then you should configure the ``Dos9_Auto.bat'' 
     script that DOS9 launches at startup. Normally this is not necessary as 
     GNU GETTEXT automatically chose your langage. Modify the following line :

         :: SET LANGUAGE=en_US

     Uncomment the line and replace EN_US by the name of your locale. It is 
     still possible that the langage does not work though, this means that 
     DOS9 is not translated yet in your language. Note that dos9 might be 
     translated into your language, and manual page can be not translated, so 
     if you use HLP, it might crash. Nevertheless, this should'nt occur as 
     HLP failsback to english.

MAKING TRANSLATIONS AND CONTRIBUTING

     Translations uses the GNU GETTEXT tool. To make translation, run the 
     ``dos9-build-gettext.bat'' script to produce .PO files (avaliable from 
     the sources) for your language, and then, translate it via a po editor 
     like POEDIT or KBABEL.

     Feel free to submit sugestion and improovements, either by submiting 
     ideas or by improoving the code.

     To submit translation, send it to : <darkbatcher@dos9.org>


{{Les variables spéciales}}

	   Les variables spéciales sont des variables internes à {dos9|Dos9}:
	Les commandes lancées avec {Dos9} n'héritent pas des variables
	spéciales, ces variables sont donc locales.

{{Utilisation des variables spéciales}}

	Les variables spéciales ne sont pas modifiables, elles sont
	uniquement définies par {../dos9|Dos9} ou par {../for|FOR}.

	Les variables spéciales {%%0} à {%%9} (la syntaxe {%0} à {%9} est aussi
	acceptée) sont affectés par les arguments passés au programme, dans l'ordre
	dans lequels ils ont été passés. Par convention {%0} est le nom du script,
	néanmoins il se peut que cette convention soit contournée.

	La variable {%%*} (ou {%*}) est constituée d'un ligne contenant tous les
	paramètres passés au script, c'est-à-dire du contenu des variables {%1} à
	{%9} et des paramètres suivants qui n'ont pas été affectés a une variable.
	Sous les systèmes de type UNIX, il n'est pas possible de retrouver la
	syntaxe exacte de la ligne de commande avec laquelle {../dos9|Dos9} a été
	invoqué, elle est reconstituée en plaçant les paramètres sur une même ligne
	en les séparant par des espaces, en ajoutant des guillemets quand le
	paramètre contient des délimiteurs valides ou des opérateurs conditionels,
	et en échappant les guillemets seuls.

{{L'expansion des variables spéciales}}

	   Le nom des variables spéciales est constitué d'une lettre ou d'un
	chiffre. Tous les caractères ASCII supérieurs à 32 peuvent être
	utilisés cepandant pour préserver la lisibilité du code il est
	préférable de se limiter au lettres, au chiffres et aux symboles.

	Les variables spéciales doivent être précédés de deux {%}, à l'exception
	des variables {%%0} à {%%9} qui peuvent être dévellopés en utilisant {%0}
	à {%9}, et ce pour des raisons de compatibilité, même si l'usage de cette
	notation n'est pas déprécié.

	   On peut aussi utiliser les options suivantes pour le dévelloppement
	des variables spéciales, pour cela il faut insérer un tilde {~} après
	le {%}, et combiner les options suivantes puis mettre le caractère
	correspondant à la variables a la fin.

	Les options disponibles sont (en prenant l'exemple de la variable {%%I}):

		- {%%~dI} : dévellope {%%I} en lettre de lecteur

		- {%%~pI} : dévellope {%I} en chemin d'accès

		- {%%~nI} : dévellope {%I} en nom de ficher

		- {%%~xI} : dévellope {%I} en extension de fichier

		- {%%~zI} : dévellope {%I} en taille de fichier

		- {%%~aI} : dévellope {%I} en attribut de fichier

		- {%%~tI} : dévellope {%I} en date et heure d'accès

	On peut biensûr combiner les options (jusqu'a 16 simultanément).

	Il se peut que des conflits entres options et noms de variables arrivent.
	Si c'est le cas, {Dos9} utilisera la combinaison d'option la plus longue possible
	donnant une variable valide (une variable définie). Ainsi, dans le code suivant :

	${ECHO %%~aI}

	Il existe plusieurs interprétation possibles :

		- Si {%%I} est définie, alors la variable {%%I} sera dévellopée en utilisant le l'option {a}.

		- Si {%%I} n'est pas définie et que {%%a} l'est, alors la variable qui sera dévellopée sera
		{%~a}.

		- Si aucune variable n'est définie, la variable est laissée telle qu'elle.

{{Note}}

	{Dos9} est sensible à la casse pour les options et les noms de
	{variables spéciales}

{{À voir aussi}}

	{var|Les variables d'environnement}, {exp|L'expansion des variables},
	{index|Index des spécification}
